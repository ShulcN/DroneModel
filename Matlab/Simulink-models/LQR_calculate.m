m=0.65;
a=0.07;
b=0.07;
l=0.15;
c=0.02;
g=9.81;
maxDroneSpeed=40;
maxMotorSpeed=8450/60*2*pi;
R=165/1000;
Ke=11/maxMotorSpeed;
Km=Ke;
Imot=12;
J = 2.5*10^(-6);
B = 1*10^(-5);
La = 50*10^(-6);
ra = 0.048;
ke = 0.0073;
kt = 0.0073;

R=ra;
Ke=ke;
Km=kt;
L = La;

% B = 0;
% La = 0.00047;
% ra = R;
% ke = Km;
% kt = Ke;


rho = 1.225;
C_drag = 0;
c_a = 0;
c_b = 0;
c_d = 0; 
A_flap = [c_a, c_b, 0;
          -c_b, c_a, 0;
          0, 0, 0];
A_ind = [c_d, 0, 0;
           0, c_d, 0;
           0, 0, 0];


Sblade=0.00525; %площадь лопасти
airDensity=1.225; %плотность воздуха
ks=1; %коэффициент подъемной силы
r=0.07; %радиус лопастей

maxU=16;
%%%%%%%%%%%%%%%%%%%%%%%%%% Рассчет некоторых постоянных %%%%%%%%%%%%%%%%%%%

S=l*c*4+a*b;

kf=ks*r^2*airDensity*Sblade/2; %коэффициент силы тяги
maxAirResistance=airDensity*maxDroneSpeed^2*S*0.5/2; %максимальное сопративление воздуха(не учитывается в модели)

%maxAirResistance
Ip=(1.8*r)^2*0.015/12; %момент инерции лопасти
Im=0.0135^2*0.045/2; %момент инерции мотора
Ix=m/3*a^2/12+2*0.045*l^2; %момент инерции относительно x
Iy=m/3*a^2/12+4*0.045*l^2; %момент инерции относительно y
Iz=m/3*a^2/4+2*0.045*l^2;  %момент инерции относительно z

T = 0;

% Матрица Adrag
Adrag = -T/m * (A_ind + A_flap);

% Построение матрицы A
A = zeros(12);
A(1:3, 4:6) = eye(3);          % позиции -> скорости
A(4:6, 4:6) = Adrag;           % блок аэродинамического сопротивления
A(7:9, 7:9) = eye(3);          % блок интегральных состояний (пример)

% Построение матрицы B
B = zeros(12,4);
B(6, 1) = 1/m;                 % управление по оси Z
B(10, 2) = 1/Ix;               % управление по крену
B(11, 3) = 1/Iy;               % управление по тангажу
B(12, 4) = 1/Iz;               % управление по рысканью

% Определение весовых матриц LQR
Q = diag([10 10 10 1 1 1 5 5 5 1 1 1]); % веса состояний
%Q = eye(12);
R = eye(4);                             % веса управлений

n = size(A, 1); % 12
m = size(B, 2); % 4

% Синтез LQR-регулятора
cvx_begin sdp quiet
    variable P(n,n) symmetric   % Матрица Ляпунова
    variable Y(m,n)             % Вспомогательная матрица
    %minimize(trace(Q*P) + trace(R*Y*Y')) % Суррогатная целевая функция
    
    % Условие устойчивости (A*P + P*A' + B*Y + Y'*B' <= -Q)
    % A'*P + P*A - P*B*R*B'*P == -Q
    % variable P(4,4) symmetric
    % variable Y(2,4)
    %variable mumu
    %minimize mumu
    P > 0.0000001*eye(n);
    P*A'+A*P+2*a*P+Y'*B'+B*Y <= 0;
    % Положительная определенность P
    %P >= eye(n)*0.000001               
cvx_end

% Вычисление матрицы коэффициентов регулятора
K = Y * inv(P);
% [K, ~, ~] = lqr(A, B, Q, R);

% Вывод коэффициентов
disp('LQR коэффициенты регулятора:');
disp(K);